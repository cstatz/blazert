<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classblazert_1_1BlazertScene" kind="class" language="C++" prot="public">
    <compoundname>blazert::BlazertScene</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1a9f7a48788de8539429e5e12a844af0f0" prot="public" static="no" mutable="no">
        <type>BVHBuildOptions&lt; T &gt;</type>
        <definition>BVHBuildOptions&lt;T&gt; blazert::BlazertScene&lt; T &gt;::build_options</definition>
        <argsstring></argsstring>
        <name>build_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="30" column="19" bodyfile="blazert/scene.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1a78f6215effb6deaaec887f3f9c3429bd" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool blazert::BlazertScene&lt; T &gt;::has_been_committed</definition>
        <argsstring></argsstring>
        <name>has_been_committed</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="32" column="8" bodyfile="blazert/scene.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1a034cbb7a3b02b51f8f65eff568f56424" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int blazert::BlazertScene&lt; T &gt;::geometries</definition>
        <argsstring></argsstring>
        <name>geometries</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>geometries counts the amount of different geometry types -&gt; each geometry has its own BVH -&gt; for each geometry, we have various primitives; the hit prim_id will be saved in the RayHit structure </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="38" column="16" bodyfile="blazert/scene.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1ae25cec40966d913ad4235a2d48d8547c" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; TriangleMesh&lt; T &gt; &gt;</type>
        <definition>std::unique_ptr&lt;TriangleMesh&lt;T&gt; &gt; blazert::BlazertScene&lt; T &gt;::triangle_collection</definition>
        <argsstring></argsstring>
        <name>triangle_collection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="40" column="19" bodyfile="blazert/scene.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1ac28a566d07cab03ba29746a704e38739" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; BVH&lt; T, TriangleMesh &gt; &gt;</type>
        <definition>std::unique_ptr&lt;BVH&lt;T, TriangleMesh&gt; &gt; blazert::BlazertScene&lt; T &gt;::triangles_bvh</definition>
        <argsstring></argsstring>
        <name>triangles_bvh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="41" column="19" bodyfile="blazert/scene.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1adfa0cabca79c93c0fb056ea4146b375d" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t blazert::BlazertScene&lt; T &gt;::triangles_geom_id</definition>
        <argsstring></argsstring>
        <name>triangles_geom_id</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="42" column="10" bodyfile="blazert/scene.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1ab2841772e1062683ee2ff78cc0b35d0f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool blazert::BlazertScene&lt; T &gt;::has_triangles</definition>
        <argsstring></argsstring>
        <name>has_triangles</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="43" column="8" bodyfile="blazert/scene.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1a07668a138493a64ff5916ea5e7c631f6" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; SphereCollection&lt; T &gt; &gt;</type>
        <definition>std::unique_ptr&lt;SphereCollection&lt;T&gt; &gt; blazert::BlazertScene&lt; T &gt;::sphere_collection</definition>
        <argsstring></argsstring>
        <name>sphere_collection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="45" column="19" bodyfile="blazert/scene.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1ab6eb647122f6b1278f842d50943a11ab" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; BVH&lt; T, SphereCollection &gt; &gt;</type>
        <definition>std::unique_ptr&lt;BVH&lt;T, SphereCollection&gt; &gt; blazert::BlazertScene&lt; T &gt;::spheres_bvh</definition>
        <argsstring></argsstring>
        <name>spheres_bvh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="46" column="19" bodyfile="blazert/scene.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1a87e8045fd4139f532814143fa9c37ad9" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t blazert::BlazertScene&lt; T &gt;::spheres_geom_id</definition>
        <argsstring></argsstring>
        <name>spheres_geom_id</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="47" column="10" bodyfile="blazert/scene.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1a571e6b77559032ddc3f40287b5292a07" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool blazert::BlazertScene&lt; T &gt;::has_spheres</definition>
        <argsstring></argsstring>
        <name>has_spheres</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="48" column="8" bodyfile="blazert/scene.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1a335fda47f2a2c798e8b89f2b3fbc3bfb" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; PlaneCollection&lt; T &gt; &gt;</type>
        <definition>std::unique_ptr&lt;PlaneCollection&lt;T&gt; &gt; blazert::BlazertScene&lt; T &gt;::plane_collection</definition>
        <argsstring></argsstring>
        <name>plane_collection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="50" column="19" bodyfile="blazert/scene.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1af1a1950eadb665439175b2cd5f554952" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; BVH&lt; T, PlaneCollection &gt; &gt;</type>
        <definition>std::unique_ptr&lt;BVH&lt;T, PlaneCollection&gt; &gt; blazert::BlazertScene&lt; T &gt;::planes_bvh</definition>
        <argsstring></argsstring>
        <name>planes_bvh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="51" column="19" bodyfile="blazert/scene.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1a794c064893ca2d99f3dfc86b3f83e207" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t blazert::BlazertScene&lt; T &gt;::planes_geom_id</definition>
        <argsstring></argsstring>
        <name>planes_geom_id</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="52" column="10" bodyfile="blazert/scene.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1ab1c532c6f0f1aafc9c9f14cf7194d276" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool blazert::BlazertScene&lt; T &gt;::has_planes</definition>
        <argsstring></argsstring>
        <name>has_planes</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="53" column="8" bodyfile="blazert/scene.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1a3b79dec4afd55a7a0f3d8ebffb85e10c" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; CylinderCollection&lt; T &gt; &gt;</type>
        <definition>std::unique_ptr&lt;CylinderCollection&lt;T&gt; &gt; blazert::BlazertScene&lt; T &gt;::cylinder_collection</definition>
        <argsstring></argsstring>
        <name>cylinder_collection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="55" column="19" bodyfile="blazert/scene.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1a76c755654f4b4abf1ea5a60a5587948d" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; BVH&lt; T, CylinderCollection &gt; &gt;</type>
        <definition>std::unique_ptr&lt;BVH&lt;T, CylinderCollection&gt; &gt; blazert::BlazertScene&lt; T &gt;::cylinders_bvh</definition>
        <argsstring></argsstring>
        <name>cylinders_bvh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="56" column="19" bodyfile="blazert/scene.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1a188346096a00dcb08f86afe3a43ea46c" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t blazert::BlazertScene&lt; T &gt;::cylinders_geom_id</definition>
        <argsstring></argsstring>
        <name>cylinders_geom_id</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="57" column="10" bodyfile="blazert/scene.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblazert_1_1BlazertScene_1aeb2b8d4f17f40cfee395ed4b701e22b6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool blazert::BlazertScene&lt; T &gt;::has_cylinders</definition>
        <argsstring></argsstring>
        <name>has_cylinders</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="58" column="8" bodyfile="blazert/scene.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classblazert_1_1BlazertScene_1a01107c1a3ba3782f8dc39c0ddc569699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>blazert::BlazertScene&lt; T &gt;::BlazertScene</definition>
        <argsstring>()=default</argsstring>
        <name>BlazertScene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="61" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classblazert_1_1BlazertScene_1a719c313b34727a4414dd7bf74ec92df9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int blazert::BlazertScene&lt; T &gt;::add_mesh</definition>
        <argsstring>(const Vec3rList&lt; T &gt; &amp;vertices, const Vec3iList &amp;triangles)</argsstring>
        <name>add_mesh</name>
        <param>
          <type>const Vec3rList&lt; T &gt; &amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>const Vec3iList &amp;</type>
          <declname>triangles</declname>
        </param>
        <briefdescription>
<para>Adds a triangular mesh to the scene. </para>
        </briefdescription>
        <detaileddescription>
<para>A triangular mesh can be used to describe any geometry. The mesh is described by vertices and a list of triangles which describe which vertices form a triangle. The prim_id is set in the rayhit structure by the intersection functions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertices need to be allocated on the heap! </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>triangles</parametername>
</parameternamelist>
<parameterdescription>
<para>Triangles need to be allocated on the heap! </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>geometry id for the mesh.</para>
</simplesect>
<simplesect kind="note"><para>vertices and triangles need to be allocated on the heap. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="77" column="16" bodyfile="blazert/scene.h" bodystart="222" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classblazert_1_1BlazertScene_1ab242056fa98e69136e05bd8a19cdf487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int blazert::BlazertScene&lt; T &gt;::add_spheres</definition>
        <argsstring>(const Vec3rList&lt; T &gt; &amp;centers, const std::vector&lt; T &gt; &amp;radii)</argsstring>
        <name>add_spheres</name>
        <param>
          <type>const Vec3rList&lt; T &gt; &amp;</type>
          <declname>centers</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>radii</declname>
        </param>
        <briefdescription>
<para>Adds spheres at centers with radii. </para>
        </briefdescription>
        <detaileddescription>
<para>The spheres are described by centers and radii. For <formula id="0">$N$</formula> spheres, each of these vectors needs to have <formula id="0">$N$</formula> entries describing the corresponding sphere&apos;s center and radius.</para>
<para>The prim_id is set in the rayhit structure by the intersection functions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>centers</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies centers of the spheres (needs to be allocated on heap) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radii</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies radii of the spheres (needs to be allocated on heap) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>geometry id of the spheres</para>
</simplesect>
<simplesect kind="note"><para>centers and radii need to be allocated on the heap. </para>
</simplesect>
<simplesect kind="note"><para>centers and spheres should be of the same length. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="97" column="16" bodyfile="blazert/scene.h" bodystart="237" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classblazert_1_1BlazertScene_1ae32d78dacde00d13520366d07902c8d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int blazert::BlazertScene&lt; T &gt;::add_planes</definition>
        <argsstring>(const Vec3rList&lt; T &gt; &amp;centers, const std::vector&lt; T &gt; &amp;dxs, const std::vector&lt; T &gt; &amp;dys, const Mat3rList&lt; T &gt; &amp;rotations)</argsstring>
        <name>add_planes</name>
        <param>
          <type>const Vec3rList&lt; T &gt; &amp;</type>
          <declname>centers</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>dxs</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>dys</declname>
        </param>
        <param>
          <type>const Mat3rList&lt; T &gt; &amp;</type>
          <declname>rotations</declname>
        </param>
        <briefdescription>
<para>Adds planes at centers with dimensions dxs and dys rotated around rotations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>centers</parametername>
</parameternamelist>
<parameterdescription>
<para>center of planes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dxs</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions in x direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dys</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions in y direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotations</parametername>
</parameternamelist>
<parameterdescription>
<para>local rotation matrices </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>geometry id of the planes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="107" column="16" bodyfile="blazert/scene.h" bodystart="252" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classblazert_1_1BlazertScene_1a78c7777dff38468f4323e6e05f5f181c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int blazert::BlazertScene&lt; T &gt;::add_cylinders</definition>
        <argsstring>(const Vec3rList&lt; T &gt; &amp;centers, const std::vector&lt; T &gt; &amp;semi_axes_a, const std::vector&lt; T &gt; &amp;semi_axes_b, const std::vector&lt; T &gt; &amp;heights, const Mat3rList&lt; T &gt; &amp;rotations)</argsstring>
        <name>add_cylinders</name>
        <param>
          <type>const Vec3rList&lt; T &gt; &amp;</type>
          <declname>centers</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>semi_axes_a</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>semi_axes_b</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>heights</declname>
        </param>
        <param>
          <type>const Mat3rList&lt; T &gt; &amp;</type>
          <declname>rotations</declname>
        </param>
        <briefdescription>
<para>Adds cylinders with the bottom ellipsoid centered at centers, described by two semi_axes and heights. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>centers</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>semi_axes_a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>semi_axes_b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>heights</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotations</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>geometry id of the cylinders </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="119" column="16" bodyfile="blazert/scene.h" bodystart="267" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classblazert_1_1BlazertScene_1a0b32a881e3299c018870df1f3849398d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool blazert::BlazertScene&lt; T &gt;::commit</definition>
        <argsstring>()</argsstring>
        <name>commit</name>
        <briefdescription>
<para>Commits the scene and builds BVH for each geometry type. </para>
        </briefdescription>
        <detaileddescription>
<para>This function commits the scene</para>
<para>It is necessary to run this function before running the intersect functions. The bounding volume hierarchy is built for each geometry type present in the scene.</para>
<para><simplesect kind="return"><para>returns true if scene has been committed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="blazert/scene.h" line="133" column="8" bodyfile="blazert/scene.h" bodystart="133" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="blazert/scene.h" line="27" column="1" bodyfile="blazert/scene.h" bodystart="27" bodyend="158"/>
    <listofallmembers>
      <member refid="classblazert_1_1BlazertScene_1a78c7777dff38468f4323e6e05f5f181c" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>add_cylinders</name></member>
      <member refid="classblazert_1_1BlazertScene_1a719c313b34727a4414dd7bf74ec92df9" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>add_mesh</name></member>
      <member refid="classblazert_1_1BlazertScene_1ae32d78dacde00d13520366d07902c8d3" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>add_planes</name></member>
      <member refid="classblazert_1_1BlazertScene_1ab242056fa98e69136e05bd8a19cdf487" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>add_spheres</name></member>
      <member refid="classblazert_1_1BlazertScene_1a01107c1a3ba3782f8dc39c0ddc569699" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>BlazertScene</name></member>
      <member refid="classblazert_1_1BlazertScene_1a9f7a48788de8539429e5e12a844af0f0" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>build_options</name></member>
      <member refid="classblazert_1_1BlazertScene_1a0b32a881e3299c018870df1f3849398d" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>commit</name></member>
      <member refid="classblazert_1_1BlazertScene_1a3b79dec4afd55a7a0f3d8ebffb85e10c" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>cylinder_collection</name></member>
      <member refid="classblazert_1_1BlazertScene_1a76c755654f4b4abf1ea5a60a5587948d" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>cylinders_bvh</name></member>
      <member refid="classblazert_1_1BlazertScene_1a188346096a00dcb08f86afe3a43ea46c" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>cylinders_geom_id</name></member>
      <member refid="classblazert_1_1BlazertScene_1a034cbb7a3b02b51f8f65eff568f56424" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>geometries</name></member>
      <member refid="classblazert_1_1BlazertScene_1a78f6215effb6deaaec887f3f9c3429bd" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>has_been_committed</name></member>
      <member refid="classblazert_1_1BlazertScene_1aeb2b8d4f17f40cfee395ed4b701e22b6" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>has_cylinders</name></member>
      <member refid="classblazert_1_1BlazertScene_1ab1c532c6f0f1aafc9c9f14cf7194d276" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>has_planes</name></member>
      <member refid="classblazert_1_1BlazertScene_1a571e6b77559032ddc3f40287b5292a07" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>has_spheres</name></member>
      <member refid="classblazert_1_1BlazertScene_1ab2841772e1062683ee2ff78cc0b35d0f" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>has_triangles</name></member>
      <member refid="classblazert_1_1BlazertScene_1a335fda47f2a2c798e8b89f2b3fbc3bfb" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>plane_collection</name></member>
      <member refid="classblazert_1_1BlazertScene_1af1a1950eadb665439175b2cd5f554952" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>planes_bvh</name></member>
      <member refid="classblazert_1_1BlazertScene_1a794c064893ca2d99f3dfc86b3f83e207" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>planes_geom_id</name></member>
      <member refid="classblazert_1_1BlazertScene_1a07668a138493a64ff5916ea5e7c631f6" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>sphere_collection</name></member>
      <member refid="classblazert_1_1BlazertScene_1ab6eb647122f6b1278f842d50943a11ab" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>spheres_bvh</name></member>
      <member refid="classblazert_1_1BlazertScene_1a87e8045fd4139f532814143fa9c37ad9" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>spheres_geom_id</name></member>
      <member refid="classblazert_1_1BlazertScene_1ae25cec40966d913ad4235a2d48d8547c" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>triangle_collection</name></member>
      <member refid="classblazert_1_1BlazertScene_1ac28a566d07cab03ba29746a704e38739" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>triangles_bvh</name></member>
      <member refid="classblazert_1_1BlazertScene_1adfa0cabca79c93c0fb056ea4146b375d" prot="public" virt="non-virtual"><scope>blazert::BlazertScene</scope><name>triangles_geom_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
